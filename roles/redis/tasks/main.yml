---
# tasks file for redis

- name: "Create redis directories"
  become: true
  file:
    path: "{{ redis_persist_path }}"
    owner: "999"
    group: "999"
    mode: "700"
    state: "directory"

- name: "Create docker network for redis containers"
  become: true
  docker_network:
    name: "{{ redis_network }}"
    driver: "bridge"
    scope: "local"
    state: "present"

- name: "Start redis container"
  become: true
  docker_container:
    state: "started"
    name: "{{ redis_container_name }}"

    image: "{{ redis_image }}"
    pull: true

    # Prepare for docker plugin v2 change
    container_default_behavior: "no_defaults"
    auto_remove: false
    detach: true
    init: false
    interactive: false
    memory: "0"
    paused: false
    privileged: false
    read_only: false
    tty: false

    restart_policy: "on-failure"
    restart_retries: 3
    user: "999:999"
    network_mode: "{{ redis_network }}"
    networks:
      - name: "{{ redis_network }}"
        aliases:
          - "redis"
    mounts:
      - source: "{{ redis_persist_path }}"
        target: "/data"
        type: "bind"
    command:
      - "redis-server"
      - "--appendonly"
      - "yes"
      - "--auto-aof-rewrite-percentage"
      - "20"

# This assumes the docker command is targeting the same host as docker ansible modules.
# Which might not always be the case.
- name: "Wait for redis to be up"
  become: true
  command: "docker exec {{ redis_container_name|quote }} redis-cli PING"
  register: "redis_up"
  until: "redis_up.rc == 0"
  retries: 20
  delay: 3
