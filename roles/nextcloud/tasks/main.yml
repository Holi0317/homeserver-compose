# vim: ft=yaml.ansible
---
# tasks file for nextcloud
- name: "Create directories for nextcloud"
  become: true
  loop:
    - "{{ nextcloud_base_path }}"
    - "{{ nextcloud_data_path }}"
    - "{{ nextcloud_asset_path }}"
  ansible.builtin.file:
    path: "{{ item }}"
    owner: "82"
    group: "82"
    mode: "700"
    state: "directory"

- name: "Create postgres user for nextcloud"
  community.postgresql.postgresql_user:
    name: "nextcloud"
    password: "{{ nextcloud_pg_password }}"
    login_host: "127.0.0.1"
    login_user: "postgres"
    login_password: "{{ postgres_admin_password }}"
    db: "nextcloud"
    role_attr_flags: "NOINHERIT"

- name: "Create postgres database for nextcloud"
  community.postgresql.postgresql_db:
    name: "nextcloud"
    owner: "nextcloud"
    encoding: "UTF8"
    login_host: "127.0.0.1"
    login_user: "postgres"
    login_password: "{{ postgres_admin_password }}"

- name: "Create docker network for nextcloud"
  become: true
  community.docker.docker_network:
    name: "{{ nextcloud_network }}"
    driver: "bridge"
    scope: "local"
    state: "present"

- name: "Create fpm container"
  become: true
  docker_container: &fpm
    state: "started"
    name: "nextcloud_fpm"
    image: "{{ nextcloud_fpm_image }}"
    pull: true
    comparisons:
      image: "strict"
      env: "strict"
      volumes: "allow_more_present"
      networks: "allow_more_present"

    # prepare for docker plugin v2 change
    container_default_behavior: "no_defaults"
    auto_remove: false
    detach: true
    init: false
    interactive: false
    memory: "0"
    paused: false
    privileged: false
    read_only: false
    tty: false

    restart_policy: "always"
    network_mode: "{{ nextcloud_network }}"
    networks:
      - name: "{{ nextcloud_network }}"
        aliases:
          - "nextcloud-fpm"
      - name: "authentik"
      - name: "postgres"
      - name: "redict"
    env:
      POSTGRES_DB: "nextcloud"
      POSTGRES_USER: "nextcloud"
      POSTGRES_PASSWORD: "{{ nextcloud_pg_password }}"
      POSTGRES_HOST: "postgres:5432"
      NEXTCLOUD_DATA_DIR: "/var/data"
      REDIS_HOST: "redict"
      # FIXME: Respect nextcloud_redict_db variable
      REDIS_HOST_PORT: "6379"
      TRUSTED_PROXIES: "0.0.0.0/0"
    mounts:
      - source: "{{ nextcloud_data_path }}"
        target: "/var/data"
        type: "bind"
      - source: "{{ nextcloud_asset_path }}"
        target: "/var/www/html"
        type: "bind"

- name: "Create cron container"
  become: true
  docker_container:
    <<: *fpm
    name: "nextcloud_cron"
    entrypoint: "/cron.sh"
    user: "root:root"
    networks:
      - name: "{{ nextcloud_network }}"
      - name: "postgres"
      - name: "redict"

- name: "Create web (nginx) container"
  become: true
  docker_container:
    state: "started"
    name: "nextcloud_web"
    image: "{{ nextcloud_web_image }}"
    pull: true
    comparisons:
      image: "strict"
      env: "strict"
      volumes: "allow_more_present"
      networks: "allow_more_present"

    # prepare for docker plugin v2 change
    container_default_behavior: "no_defaults"
    auto_remove: false
    detach: true
    init: false
    interactive: false
    memory: "0"
    paused: false
    privileged: false
    read_only: false
    tty: false

    restart_policy: "always"
    network_mode: "{{ nextcloud_network }}"
    networks:
      - name: "{{ nextcloud_network }}"
      - name: "traefik"
    mounts:
      - source: "{{ nextcloud_asset_path }}"
        target: "/var/www/html"
        type: "bind"
        read_only: true
    labels:
      traefik.enable: "true"
      traefik.docker.network: "traefik"
      traefik.http.routers.nc.rule: "Host(`{{ nextcloud_domain }}`)"
      traefik.http.routers.nc.entrypoints: "websecure"
      traefik.http.routers.nc.tls.certresolver: "myhttpchallenge"
      traefik.http.routers.nc.middlewares: "compress@file,secure_head@file,nc-headers"
      traefik.http.middlewares.nc-headers.headers.customFrameOptionsValue: "SAMEORIGIN"
      traefik.http.middlewares.nc-headers.headers.stsSeconds: "31536000"
